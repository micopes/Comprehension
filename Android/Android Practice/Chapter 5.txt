5-01
fragment
레이아웃 안에 레이아웃을 넣는 방식 : 계층 구조.
한 화면에 여러 부분화면을 넣는게 효율적일 수도 있다.
이것을 레이아웃을 넣는게 아니라 프래그먼트를 넣을 수 있다. 즉 부분화면을 위한 레이아웃

프래그먼트는 레이아웃과 같은 성격이나. 재사용의 성격을 갖고 있다(독립적으로 사용 가능. 복사 붙여넣기 등 가능.)
레이아웃과 액티비티의 성질을 지니고 있다.

액티비티는 인텐트를 이용해서 그러나
프래그먼트는 메소드를 이용해서 액티비티-인텐트의 기능을 할 수 있다.
액티비티는 시스템에서 관리하는 반면 프래그먼트는 그게 아니라 각각의 액티비티 위에 올라가므로 보안상에도 유리할 수 있다.

5-02

onFragmentchanged 프래그먼트 간 전환.

onAttach() <- 프래그먼트 생성시
onCreateView() <- 작업
onActivityCreated() <- 액티비티에 프래그먼트 생성시.

5-04
container = false.
나중에 붙일때 true로 변경시켜준다.

5-05 
imageview > fragment

listfragment


5-06
callback 의 onImageSelected 를 통해서 이미지를 선택.

actionbar

optionmenu

menu_main.xml
메뉴에 해당하는 기능이 새로 구현되어 있다.
alt + enter로 app를 추가할 수 있다.

5-07
각각의 메뉴 선택, 그 선택에 해당하는 표시.
optionmenu : menu 형식으로 어떤 것을 보여주고자 할때 사용한다.

actionbar를 이용해서 메뉴를 우리가 원하는 대로 보여줄 수 있다.
ex) 글자를 이미지로 바꿔서 보여주는 방법.

앱의 기본적인 구조를 만드는데 도움을 주는 것 =>
5-08
tap에 대한 것.
하나의 액티비티안에서 여러 개의 화면을 보여주기 위한 것.

appbarlayout : 액션바의 영역을 가리킨다.

cordinatorlayout : 

5-10
fragment 여러 개.

탭이 눌러지면 각각에 해당하는 fragment 를 설정 가능.
fragment manager
switch문으로 id 비교 가능. -> 다른 fragment를 보여준다.

5-12
뷰페이저 : 좌, 우 스크롤로 화면을 넘김.
뷰페이저와 같은 것을 관리하는 것을 adapter라고 한다
fragment의 리스트를 만들어서 뷰페이지를 적용시켜줌으로써 화면을 전환하는 것.

5-13
햄버거 메뉴
처음에 빈프로젝트 말고 Navigation drawer activity를 만든다.
drawer. 
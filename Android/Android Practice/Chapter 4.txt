4-01
xml 여러개 만들기

xml -> java source code에 전달되는 과정

레이아웃 -> 메모리에 올라감 -> 메모리에서 받아와서 이것이 화면에 출력되는 것.
인플레이션 : xml이 메모리에 ..
변수의 id가 미리 설정되어야 그것을 받아 사용할 수 있다. 다른 언어와 같은 원리.

!! 4-02
xml이 하나의 화면
부분화면을 둘 수 있다.
inflater 
inflater.inflate(R.layout.sub1, container, true);
부분화면을 container에 추가하는 것.

4-03
intent
context : 버튼의 주변 정보(버튼이 어디 들어있는지.. 세부 정보들을 알려줌)
이건 화면하나더띄우는거인듯

4-04
finish하면 화면 없어짐.
intent를 통해서 다른 activity에 data를 전달할 수 있다.
어디서 요청을 받았는지(requestCode)를 통해서 다른 결과를 나타낼 수 있다.
resultCode

4-05
startActivity : 메시지를 전달.
응답을 받고싶다면 startActivityResult
	아니라면 startActivity

액티비티 스택
동일한 화면이 스택에 쌓인다면?
-> 이런 문제를 해결하기 위해서 FLAG_ACTIVITY_SINGLE_TOP을 통해 재사용할 수 있도록

4-06
부가데이터
parcelable

두개의 activity간에 데이터 전달.

parcelable 형태로 만들어야 함
-> read, write를 통해서 전달을 함
java내에 있는 serializable로 만들수도 있지만 코드가 더 길어지게 된다 그래서 보통 parcelable을 사용함.

4-07 
processIntent
bundle 객체를 참조해서 getParcelabe를 통해서 전달 가능.

테스크?
프로세스와 관계없이 화면의 흐름 관리.
프로세스 간의 통신이 되어야 함. 전화걸기 창을 띄우는 것은 우리가 만든게 아니지만 자연스럽게 연결을 시켜주기 위한 것.

lifecycle
예를 들면 전화가 오면 전화가 더 중요한 작업이기 때문에 그것이 먼저 수행.
앱이 메모리를 많이 차지하고 있다면 그것을 없앨 수 있음.

